{"version":3,"file":"index.min.js","mappings":"mBAmHe,IAnHf,MACG,WAAAA,CAAYC,EAAUC,GAInBC,KAAKD,QAAUE,OAAOC,OAHD,CAClBC,UAAW,QAE+BJ,GAE7CC,KAAKF,SAAWA,EAChBE,KAAKI,KAAOC,SAASC,cAAc,eAAeR,OAE/CE,KAAKI,MACLJ,KAAKO,QAAUP,KAAKI,KAAKE,cAAc,cACvCN,KAAKQ,SAAWR,KAAKI,KAAKK,iBAAiB,kBAC3CT,KAAKU,UAAYV,KAAKI,KAAKK,iBAAiB,eAM/CT,KAAKW,QACLX,KAAKY,OACLZ,KAAKa,UANFC,QAAQC,MAAM,iCAOpB,CAEA,KAAAJ,GACON,SAASI,iBAAiB,eAAeT,KAAKF,cAAckB,OAAS,EACtEF,QAAQC,MAAM,OAIbf,KAAKQ,SAASQ,SAAWhB,KAAKU,UAAUM,QACzCF,QAAQC,MAAM,MAGpB,CAEA,IAAAH,GACGZ,KAAKO,QAAQU,aAAa,OAAQ,WAElCjB,KAAKQ,SAASU,SAAQ,CAACC,EAAIC,KACxBD,EAAGF,aAAa,OAAQ,OACxBE,EAAGF,aAAa,WAAY,MAC5BE,EAAGF,aAAa,KAAM,GAAGjB,KAAKF,WAAWsB,EAAI,KAC7CD,EAAGE,UAAUC,OAAO,wBAAwB,IAG/CtB,KAAKU,UAAUQ,SAAQ,CAACC,EAAIC,KACzBD,EAAGF,aAAa,OAAQ,WACxBE,EAAGF,aAAa,WAAY,MAC5BE,EAAGF,aAAa,kBAAmBjB,KAAKQ,SAASY,GAAGG,IACpDJ,EAAGE,UAAUC,OAAO,qBAAoB,IAG3CtB,KAAKQ,SAAS,GAAGa,UAAUG,IAAI,wBAC/BxB,KAAKQ,SAAS,GAAGiB,gBAAgB,YACjCzB,KAAKQ,SAAS,GAAGS,aAAa,gBAAiB,QAC/CjB,KAAKU,UAAU,GAAGW,UAAUG,IAAI,oBACnC,CAEA,MAAAX,GACGb,KAAKQ,SAASU,SAAQ,CAACC,EAAIC,KACxBD,EAAGO,iBAAiB,SAASC,IAC1B,IAAIC,EAAa5B,KAAKO,QAAQD,cAAc,mBAExCqB,EAAEE,gBAAkBD,GACrB5B,KAAK8B,WAAWH,EAAEE,cAAeD,EACpC,IAGHT,EAAGO,iBAAiB,WAAWC,IAC5B,IAAII,EAAQC,MAAMC,UAAUC,QAAQC,KAAKnC,KAAKQ,SAAUmB,EAAEE,eACtDO,EAAM,KAGPA,EADa,KAAZT,EAAEU,MACGN,EAAQ,EACM,KAAZJ,EAAEU,MACJN,EAAQ,EACM,KAAZJ,EAAEU,MACJ,OAEA,KAGG,OAARD,IACW,SAARA,EACDpC,KAAKU,UAAUU,GAAGkB,QACVtC,KAAKQ,SAAS4B,IACtBpC,KAAK8B,WAAW9B,KAAKQ,SAAS4B,GAAMT,EAAEE,eAE5C,GACD,GAER,CAEA,UAAAC,CAAWS,EAAQC,GAChBD,EAAOD,QACPC,EAAOd,gBAAgB,YACvBc,EAAOtB,aAAa,gBAAiB,QAErCuB,EAAOf,gBAAgB,iBACvBe,EAAOvB,aAAa,WAAY,MAEhC,IAAIc,EAAQC,MAAMC,UAAUC,QAAQC,KAAKnC,KAAKQ,SAAU+B,GACpDE,EAAWT,MAAMC,UAAUC,QAAQC,KAAKnC,KAAKQ,SAAUgC,GAE3DxC,KAAKU,UAAUqB,GAAOV,UAAUG,IAAI,qBACpCxB,KAAKU,UAAU+B,GAAUpB,UAAUC,OAAO,qBAE1CtB,KAAKQ,SAASuB,GAAOV,UAAUG,IAAI,wBACnCxB,KAAKQ,SAASiC,GAAUpB,UAAUC,OAAO,wBAEzCtB,KAAKD,QAAQI,UAAUH,KAC1B,GAGqB,M","sources":["webpack://gulp/./src/js/components/tabs.js"],"sourcesContent":["class Tabs {\r\n   constructor(selector, options) {\r\n      let defaultOptions = {\r\n         isChanged: () => {}\r\n      }\r\n      this.options = Object.assign(defaultOptions, options);\r\n      \r\n      this.selector = selector;\r\n      this.tabs = document.querySelector(`[data-tabs='${selector}']`);\r\n\r\n      if(this.tabs) {\r\n         this.tabList = this.tabs.querySelector('.tabs__nav');\r\n         this.tabsBtns = this.tabs.querySelectorAll('.tabs__nav-btn');\r\n         this.tabsItems = this.tabs.querySelectorAll('.tabs__item'); \r\n      } else {\r\n         console.error('Selector data-tabs nonexistent');\r\n         return;\r\n      }\r\n\r\n      this.check();\r\n      this.init();\r\n      this.events();\r\n   }\r\n\r\n   check() {\r\n      if (document.querySelectorAll(`[data-tabs='${this.selector}']`).length > 1) {\r\n         console.error('> 1')\r\n         return;\r\n      }\r\n\r\n      if (this.tabsBtns.length !== this.tabsItems.length) {\r\n         console.error('!==')\r\n         return;\r\n      }\r\n   }\r\n\r\n   init() {\r\n      this.tabList.setAttribute('role', 'tablist');\r\n\r\n      this.tabsBtns.forEach((el, i) => {\r\n         el.setAttribute('role', 'tab');\r\n         el.setAttribute('tabindex', '-1');\r\n         el.setAttribute('id', `${this.selector}${i + 1}`);\r\n         el.classList.remove('.tabs__nav-btn_active');\r\n      });\r\n\r\n      this.tabsItems.forEach((el, i) => {\r\n         el.setAttribute('role', 'tabitem');\r\n         el.setAttribute('tabindex', '-1');\r\n         el.setAttribute('aria-labelledby', this.tabsBtns[i].id);\r\n         el.classList.remove('.tabs__item_active')\r\n      });\r\n\r\n      this.tabsBtns[0].classList.add('tabs__nav-btn_active');\r\n      this.tabsBtns[0].removeAttribute('tabindex');\r\n      this.tabsBtns[0].setAttribute('aria-selected', 'true');\r\n      this.tabsItems[0].classList.add('tabs__item_active');\r\n   }\r\n\r\n   events() {\r\n      this.tabsBtns.forEach((el, i) => {\r\n         el.addEventListener('click', e => {\r\n            let currentTab = this.tabList.querySelector('[aria-selected]');\r\n\r\n            if (e.currentTarget !== currentTab) {\r\n               this.switchTabs(e.currentTarget, currentTab);\r\n            }\r\n         });\r\n\r\n         el.addEventListener('keydown', e => {\r\n            let index = Array.prototype.indexOf.call(this.tabsBtns, e.currentTarget);\r\n            let dir = null;\r\n   \r\n            if (e.which === 37) {\r\n               dir = index - 1;\r\n            } else if (e.which === 39) {\r\n               dir = index + 1;\r\n            } else if (e.which === 40) {\r\n               dir = 'down';\r\n            } else {\r\n               dir = null;\r\n            }\r\n   \r\n            if (dir !== null) {\r\n               if (dir === 'down') {\r\n                  this.tabsItems[i].focus();\r\n               } else if (this.tabsBtns[dir]) {\r\n                  this.switchTabs(this.tabsBtns[dir], e.currentTarget);\r\n               }\r\n            }\r\n         });\r\n      });\r\n   }\r\n\r\n   switchTabs(newTab, oldTab) {\r\n      newTab.focus();\r\n      newTab.removeAttribute('tabindex');\r\n      newTab.setAttribute('aria-selected', 'true');\r\n\r\n      oldTab.removeAttribute('aria-selected');\r\n      oldTab.setAttribute('tabindex', '-1');\r\n\r\n      let index = Array.prototype.indexOf.call(this.tabsBtns, newTab);\r\n      let oldIndex = Array.prototype.indexOf.call(this.tabsBtns, oldTab);\r\n\r\n      this.tabsItems[index].classList.add('tabs__item_active');\r\n      this.tabsItems[oldIndex].classList.remove('tabs__item_active');\r\n\r\n      this.tabsBtns[index].classList.add('tabs__nav-btn_active');\r\n      this.tabsBtns[oldIndex].classList.remove('tabs__nav-btn_active');\r\n\r\n      this.options.isChanged(this);\r\n   }\r\n}\r\n\r\nconst newTab = new Tabs('tab');"],"names":["constructor","selector","options","this","Object","assign","isChanged","tabs","document","querySelector","tabList","tabsBtns","querySelectorAll","tabsItems","check","init","events","console","error","length","setAttribute","forEach","el","i","classList","remove","id","add","removeAttribute","addEventListener","e","currentTab","currentTarget","switchTabs","index","Array","prototype","indexOf","call","dir","which","focus","newTab","oldTab","oldIndex"],"sourceRoot":""}